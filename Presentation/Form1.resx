<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAPD/JMSfVOTBpf/MdLkAAAAASUVORK5CYII=
</value>
  </data>
</root>